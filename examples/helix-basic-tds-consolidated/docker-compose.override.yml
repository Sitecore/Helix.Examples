version: "2.4"

services:

  solution:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    build:
      context: .
      args:
        BASE_IMAGE: ${SOLUTION_BASE_IMAGE}
        BUILD_IMAGE: ${SOLUTION_BUILD_IMAGE}
        TDS_Owner: ${TDS_OWNER}
        TDS_Key: ${TDS_KEY}
    scale: 0

  traefik:
    volumes:
      - ./docker/traefik:C:/etc/traefik
    # scale: 0
  
  redis:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-redis:${VERSION:-latest}
    build:
      context: ./docker/build/redis
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-redis:${SITECORE_VERSION}

  mssql:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xm1-mssql:${VERSION:-latest}
    build:
      context: ./docker/build/mssql
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-mssql:${SITECORE_VERSION}
    mem_limit: 2GB
    volumes:
      - ${LOCAL_DATA_PATH}\mssql:c:\data
  
  solr:
    volumes:
      - ${LOCAL_DATA_PATH}\solr:c:\data

  solr-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xm1-solr-init:${VERSION:-latest}

    build:
      context: ./docker/build/solr-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-solr-init:${SITECORE_VERSION}
    mem_limit: 1GB


  id:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-id:${VERSION:-latest}
    build:
      context: ./docker/build/id
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-id:${SITECORE_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license\license.xml

  cd:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xm1-cd:${VERSION:-latest}
    build:
      context: ./docker/build/cd
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-cd:${SITECORE_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
        SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    depends_on:
      - solution
    volumes:
      - ${LOCAL_DEPLOY_PATH}\website:C:\deploy
      - ${LOCAL_DATA_PATH}\cd:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      BASIC_COMPANY_URL: ${SITE_HOST}
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      ## Development Environment Optimizations
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff   
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"
    labels:
      - "traefik.http.routers.cd-${COMPOSE_PROJECT_NAME}-secure.rule=Host(`${SITE_HOST}`) || Host(`${CD_HOST}`)"

  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xm1-cm:${VERSION:-latest}
    build:
      context: ./docker/build/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-cm:${SITECORE_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
        SOLUTION_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-solution:${VERSION:-latest}
    depends_on:
      - solution
    volumes:
      - ${LOCAL_DEPLOY_PATH}\website:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      ## Development Environment Optimizations
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"
