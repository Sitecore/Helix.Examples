{
    "Parameters" : {
        "SourceFolder": {
            "Type": "string",
            "Description": "Path to the src folder of your solution. Used for Unicorn sync.",
            "Validate": "[validatenotnullorempty($_)]"
        },
        "BuildProject": {
            "Type": "string",
            "Description": "Path to the Visual Studio project to build.",
            "Validate": "[validatenotnullorempty($_)]"
        },
        "PublishProfile": {
            "Type": "string",
            "Description": "Name of the publish profile to run on build.",
            "DefaultValue": "Local"
        },
        "PublishPath": {
            "Type": "string",
            "Description": "The destination path for the project publish.",
            "Validate": "[validatenotnullorempty($_)]"
        },
        "BuildVerbosity": {
            "Type": "string",
            "Description": "MSBuild output verbosity.",
            "DefaultValue": "minimal"
        },
        "SitecoreUrl": {
            "Type": "string",
            "Description": "URL of the Sitecore instance where Unicorn has been installed.",
            "DefaultValue": "",
            "Validate": "[validatenotnullorempty($_)]"
        },
        "UnicornSecret": {
            "Type": "string",
            "Description": "The Shared Secret used for authenticating with Unicorn.",
            "DefaultValue": ""
        },
        "UnicornSecretConfig": {
            "Type": "string",
            "Description": "Path to the config file containing the Unicorn shared secret.",
            "DefaultValue": ""
        }
    },
    "Variables" : {
        "Unicorn.SecretConfig": "[if(parameter('UnicornSecretConfig'), GetUnicornSecret(parameter('UnicornSecretConfig'))], '')]",
        "Unicorn.Secret": "[if(parameter('UnicornSecret'), parameter('UnicornSecret'), variable('Unicorn.SecretConfig'))]"
    },
    "Modules" : [
        "..\\install-modules\\helix.examples.psm1",
        "..\\install-modules\\unicorn\\Unicorn.psm1"
    ],
    "Register" : {
        "Tasks" : {
            "WriteInformation": "Write-Information",
            "MsBuild": "Invoke-MsBuildWithFailureCheck",
            "SyncUnicorn": "Sync-Unicorn"
        }
    },
    "Tasks" : {
        "WritePublishUserPath": {
            "Description": "Configure Publish path for MSBuild",
            "Type": "WritePublishUserPath",
            "Params": {
                "PublishPath": "[parameter('PublishPath')]",
                "DestinationPath": "[concat(parameter('SourceFolder'), '\\Environment\\Website\\Properties\\PublishProfiles\\Local.pubxml.user.props')]"
            }
        },
        "Build": {
            "Description": "Build and Publish the Visual Studio solution",
            "Type": "MsBuild",
            "Params": {
                "Path": "[parameter('BuildProject')]",
                "MsBuildParameters": "[concat('/restore /m /p:DeployOnBuild=true /p:PublishProfile=', parameter('PublishProfile'), ' /verbosity:', parameter('BuildVerbosity'))]",
                "ShowBuildOutputInCurrentWindow": true
            }
        },
        "WriteSourceFolderConfigPatch": {
            "Description": "Write environment configuration patch for source folder",
            "Type": "WriteSourceFolderConfigPatch",
            "Params": {
                "SourceFolder": "[parameter('SourceFolder')]",
                "DestinationPath": "[concat(parameter('PublishPath'), '\\App_Config\\Environment\\SourceFolder.Dev.config')]"
            }
        },
        "Warmup": {
            "Description": "Warmup the instance after recycle",
            "Type": "InvokeSitecoreWarmup",
            "Params": {
                "TimeoutSec": "600",
                "SitecoreUrl": "[parameter('SitecoreUrl')]"
            }
        },
        "SyncUnicorn": {
            "Description": "Deploy items via Unicorn",
            "Type": "SyncUnicorn",
            "Params": {
                "ControlPanelUrl": "[concat(parameter('SitecoreUrl'), '/unicorn.aspx')]",
                "SharedSecret": "[variable('Unicorn.Secret')]"
            }
        }
    },
    "Settings" : {
        "AutoRegisterExtensions": true
    }
}